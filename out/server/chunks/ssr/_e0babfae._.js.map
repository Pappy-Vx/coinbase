{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,gMAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/badge.tsx"],"sourcesContent":["import type * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,gMAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QAAI,WAAU;kBACb,cAAA,gMAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,gMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/coinbase/src/app/page.tsx"],"sourcesContent":["import { Search, ChevronDown } from \"lucide-react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\nexport default function CryptoDashboard() {\n  const cryptoAssets = [\n    {\n      name: \"4-Way Mirror Money\",\n      symbol: \"4WMM\",\n      balance: \"834.394 4WMM\",\n      balanceUSD: \"$64,478.99\",\n      price: \"$77.28\",\n      change: \"0.00%\",\n      logo: \"https://images.unsplash.com/photo-1621761191319-c6fb62004040?w=40&h=40&fit=crop&crop=center\"\n    },\n    {\n      name: \"Coinbase Wrapped BTC\",\n      symbol: \"CBBTC\",\n      balance: \"0.00307 CBBTC\",\n      balanceUSD: \"$320.52\",\n      price: \"$107,751.94\",\n      change: \"+0.87%\",\n      logo: \"https://images.unsplash.com/photo-1518546305927-5a555bb7020d?w=40&h=40&fit=crop&crop=center\"\n    }\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      {/* Header */}\n      <div className=\"border-b border-gray-800/50 px-8 py-5\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"text-2xl font-semibold text-white\">\n             <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" aria-label=\"Coinbase Wallet Logo\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" className=\"isxjajm\" data-testid=\"wallet-logo\" fill=\"none\"><title>Coinbase Wallet Logo</title><path data-testid=\"wallet-logo-path\" d=\"M0 16C0 24.8356 7.16444 32 16 32C24.8356 32 32 24.8356 32 16C32 7.16444 24.8356 0 16 0C7.16444 0 0 7.16444 0 16ZM11.9111 10.8444C11.32 10.8444 10.8444 11.32 10.8444 11.9111V20.0889C10.8444 20.68 11.32 21.1556 11.9111 21.1556H20.0889C20.68 21.1556 21.1556 20.68 21.1556 20.0889V11.9111C21.1556 11.32 20.68 10.8444 20.0889 10.8444H11.9111Z\" fill=\"rgb(55,115,245)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"></path></svg> \n              </div>\n          </div>\n\n          <div className=\"flex items-center gap-6\">\n            {/* Search */}\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 w-4 h-4\" />\n              <Input\n                placeholder=\"Search Solana\"\n                className=\"bg-gray-900/70 border-gray-700/50 pl-10 w-72 text-white placeholder:text-gray-500 focus:border-gray-600 focus:ring-1 focus:ring-gray-600\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"px-8 py-10\">\n        {/* Balance Section */}\n        <div className=\"mb-12 flex flex-row justify-between items-center\">\n         <div>\n           <div className=\"text-gray-400 text-sm mb-3 font-medium\">Balance</div>\n          <div className=\"text-7xl font-light mb-8 text-white tracking-tight\">$64,799.51</div>\n         </div>\n\n           {/* Social Icons */}\n            <div className=\"flex items-center gap-2\">\n              <Avatar className=\"w-8 h-8 cursor-pointer hover:scale-105 transition-transform\">\n                <AvatarFallback className=\"bg-blue-600 text-white text-xs font-medium\">D</AvatarFallback>\n              </Avatar>\n              <Avatar className=\"w-8 h-8 cursor-pointer hover:scale-105 transition-transform\">\n                <AvatarFallback className=\"bg-gray-600 text-white text-xs font-medium\">G</AvatarFallback>\n              </Avatar>\n              <Avatar className=\"w-8 h-8 cursor-pointer hover:scale-105 transition-transform\">\n                <AvatarFallback className=\"bg-yellow-500 text-white text-xs font-medium\">S</AvatarFallback>\n              </Avatar>\n              <Badge variant=\"secondary\" className=\"bg-gray-800 text-gray-300 hover:bg-gray-700 cursor-pointer transition-colors\">+4</Badge>\n            </div>\n\n        </div>\n\n        {/* Navigation Tabs */}\n        <Tabs defaultValue=\"crypto\" className=\"w-full relative\">\n            <TabsList className=\"bg-transparent border-none p-0 mb-10 h-auto\">\n            <TabsTrigger\n              value=\"crypto\"\n              className=\"bg-transparent text-[#7100CF] border-b-2 border-[#7100CF] rounded-none px-0 mr-10 pb-3 data-[state=active]:bg-transparent data-[state=active]:text-[#7100CF] data-[state=active]:shadow-none font-medium\"\n            >\n              Crypto\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"defi\"\n              className=\"bg-transparent text-gray-400 border-b-2 border-transparent rounded-none px-0 mr-10 pb-3 data-[state=active]:bg-transparent data-[state=active]:text-[#7100CF] data-[state=active]:border-[#7100CF] data-[state=active]:shadow-none hover:text-gray-300 transition-colors font-medium\"\n            >\n              DeFi\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"transactions\"\n              className=\"bg-transparent text-gray-400 border-b-2 border-transparent rounded-none px-0 mr-10 pb-3 data-[state=active]:bg-transparent data-[state=active]:text-[#7100CF] data-[state=active]:border-[#7100CF] data-[state=active]:shadow-none hover:text-gray-300 transition-colors font-medium\"\n            >\n              Transactions\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"testnets\"\n              className=\"bg-transparent text-gray-400 border-b-2 border-transparent rounded-none px-0 mr-10 pb-3 data-[state=active]:bg-transparent data-[state=active]:text-[#7100CF] data-[state=active]:border-[#7100CF] data-[state=active]:shadow-none hover:text-gray-300 transition-colors font-medium\"\n            >\n              Testnets\n            </TabsTrigger>\n\n         {/* Network Dropdown */}\n         <div className=\"absolute right-0\">\n         </div>\n\n\n          </TabsList>\n\n          <TabsContent value=\"crypto\" className=\"mt-0\">\n            {/* Crypto Balance */}\n            <div className=\"mb-8\">\n              <div className=\"text-xl text-white mb-6 font-medium\">\n                Crypto Balance <span className=\"text-gray-400 font-normal\">$64,799.51</span>\n              </div>\n            </div>\n\n            {/* Assets Table */}\n            <div className=\"bg-gray-950/50 rounded-xl border border-gray-800/50 overflow-hidden\">\n\n              <Table>\n                <TableHeader>\n                  <TableRow className=\"border-gray-800/50 hover:bg-transparent\">\n                    <TableHead className=\"text-gray-400 font-medium py-4 px-6\">Asset</TableHead>\n                    <TableHead className=\"text-gray-400 font-medium text-right py-4 px-6\">Balance</TableHead>\n                    <TableHead className=\"text-gray-400 font-medium text-right py-4 px-6\">Price</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {cryptoAssets.map((asset) => (\n                    <TableRow key={asset.symbol} className=\"border-gray-800/50 hover:bg-gray-900/30 transition-colors cursor-pointer\">\n                      <TableCell className=\"py-5 px-6\">\n                        <div className=\"flex items-center gap-4\">\n                          <Avatar className=\"w-11 h-11\">\n                            <AvatarImage src={asset.logo} alt={asset.name} className=\"object-cover\" />\n                            <AvatarFallback className=\"bg-gradient-to-br from-blue-500 to-purple-600 text-white text-sm font-medium\">\n                              {asset.symbol.slice(0, 2)}\n                            </AvatarFallback>\n                          </Avatar>\n                          <div>\n                            <div className=\"text-white font-medium text-base mb-1\">{asset.name}</div>\n                            <div className=\"text-gray-400 text-sm\">{asset.balance}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-right py-5 px-6\">\n                        <div className=\"text-white font-medium text-base\">{asset.balanceUSD}</div>\n                      </TableCell>\n                      <TableCell className=\"text-right py-5 px-6\">\n                        <div className=\"text-white font-medium text-base mb-1\">{asset.price}</div>\n                        <div className={`text-sm font-medium ${asset.change.startsWith('+') ? 'text-green-400' : 'text-gray-400'}`}>\n                          {asset.change}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"defi\">\n            <div className=\"text-center py-16\">\n              <div className=\"text-gray-400 text-lg\">DeFi content coming soon...</div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"transactions\">\n            <div className=\"text-center py-16\">\n              <div className=\"text-gray-400 text-lg\">Transactions content coming soon...</div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"testnets\">\n            <div className=\"text-center py-16\">\n              <div className=\"text-gray-400 text-lg\">Testnets content coming soon...</div>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}